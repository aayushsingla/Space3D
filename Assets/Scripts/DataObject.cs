// This code automatically generated by TableCodeGen
using UnityEngine;
using System.Collections;
using System.Collections.Generic;

namespace ImportantStuff
{
	public class DataObject
	{
		public class Row
		{
			public string id;
			public string hip;
			public string hd;
			public string hr;
			public string gl;
			public string bf;
			public string proper;
			public string ra;
			public string dec;
			public string dist;
			public string pmra;
			public string pmdec;
			public string rv;
			public string mag;
			public string absmag;
			public string spect;
			public string ci;
			public string x;
			public string y;
			public string z;
			public string vx;
			public string vy;
			public string vz;
			public string rarad;
			public string decrad;
			public string pmrarad;
			public string pmdecrad;
			public string bayer;
			public string flam;
			public string con;
			public string comp;
			public string comp_primary;
			public string bs;
			public string lum;
			public string vr;
			public string var_min;
			public string var_max;

		}

		List<Row> rowList = new List<Row>();
		bool isLoaded = false;

		public bool IsLoaded()
		{
			return isLoaded;
		}

		public List<Row> GetRowList()
		{
			return rowList;
		}

		public void Load(string csv)
		{
			rowList.Clear();
			string[][] grid = CsvParser2.Parse(csv);
			for(int i = 1 ; i < grid.Length ; i++)
			{
				Row row = new Row();
				row.id = grid[i][0];
				row.hip = grid[i][1];
				row.hd = grid[i][2];
				row.hr = grid[i][3];
				row.gl = grid[i][4];
				row.bf = grid[i][5];
				row.proper = grid[i][6];
				row.ra = grid[i][7];
				row.dec = grid[i][8];
				row.dist = grid[i][9];
				row.pmra = grid[i][10];
				row.pmdec = grid[i][11];
				row.rv = grid[i][12];
				row.mag = grid[i][13];
				row.absmag = grid[i][14];
				row.spect = grid[i][15];
				row.ci = grid[i][16];
				row.x = grid[i][17];
				row.y = grid[i][18];
				row.z = grid[i][19];
				row.vx = grid[i][20];
				row.vy = grid[i][21];
				row.vz = grid[i][22];
				row.rarad = grid[i][23];
				row.decrad = grid[i][24];
				row.pmrarad = grid[i][25];
				row.pmdecrad = grid[i][26];
				row.bayer = grid[i][27];
				row.flam = grid[i][28];
				row.con = grid[i][29];
				row.comp = grid[i][30];
				row.comp_primary = grid[i][31];
				row.bs = grid[i][32];
				row.lum = grid[i][33];
				row.vr = grid[i][34];
				row.var_min = grid[i][35];
				row.var_max = grid[i][36];

				rowList.Add(row);
			}
			isLoaded = true;
		}

		public int NumRows()
		{
			return rowList.Count;
		}

		public Row GetAt(int i)
		{
			if(rowList.Count <= i)
				return null;
			return rowList[i];
		}

		public Row Find_id(string find)
		{
			return rowList.Find(x => x.id == find);
		}
		public List<Row> FindAll_id(string find)
		{
			return rowList.FindAll(x => x.id == find);
		}
		public Row Find_hip(string find)
		{
			return rowList.Find(x => x.hip == find);
		}
		public List<Row> FindAll_hip(string find)
		{
			return rowList.FindAll(x => x.hip == find);
		}
		public Row Find_hd(string find)
		{
			return rowList.Find(x => x.hd == find);
		}
		public List<Row> FindAll_hd(string find)
		{
			return rowList.FindAll(x => x.hd == find);
		}
		public Row Find_hr(string find)
		{
			return rowList.Find(x => x.hr == find);
		}
		public List<Row> FindAll_hr(string find)
		{
			return rowList.FindAll(x => x.hr == find);
		}
		public Row Find_gl(string find)
		{
			return rowList.Find(x => x.gl == find);
		}
		public List<Row> FindAll_gl(string find)
		{
			return rowList.FindAll(x => x.gl == find);
		}
		public Row Find_bf(string find)
		{
			return rowList.Find(x => x.bf == find);
		}
		public List<Row> FindAll_bf(string find)
		{
			return rowList.FindAll(x => x.bf == find);
		}
		public Row Find_proper(string find)
		{
			return rowList.Find(x => x.proper == find);
		}
		public List<Row> FindAll_proper(string find)
		{
			return rowList.FindAll(x => x.proper == find);
		}
		public Row Find_ra(string find)
		{
			return rowList.Find(x => x.ra == find);
		}
		public List<Row> FindAll_ra(string find)
		{
			return rowList.FindAll(x => x.ra == find);
		}
		public Row Find_dec(string find)
		{
			return rowList.Find(x => x.dec == find);
		}
		public List<Row> FindAll_dec(string find)
		{
			return rowList.FindAll(x => x.dec == find);
		}
		public Row Find_dist(string find)
		{
			return rowList.Find(x => x.dist == find);
		}
		public List<Row> FindAll_dist(string find)
		{
			return rowList.FindAll(x => x.dist == find);
		}
		public Row Find_pmra(string find)
		{
			return rowList.Find(x => x.pmra == find);
		}
		public List<Row> FindAll_pmra(string find)
		{
			return rowList.FindAll(x => x.pmra == find);
		}
		public Row Find_pmdec(string find)
		{
			return rowList.Find(x => x.pmdec == find);
		}
		public List<Row> FindAll_pmdec(string find)
		{
			return rowList.FindAll(x => x.pmdec == find);
		}
		public Row Find_rv(string find)
		{
			return rowList.Find(x => x.rv == find);
		}
		public List<Row> FindAll_rv(string find)
		{
			return rowList.FindAll(x => x.rv == find);
		}
		public Row Find_mag(string find)
		{
			return rowList.Find(x => x.mag == find);
		}
		public List<Row> FindAll_mag(string find)
		{
			return rowList.FindAll(x => x.mag == find);
		}
		public Row Find_absmag(string find)
		{
			return rowList.Find(x => x.absmag == find);
		}
		public List<Row> FindAll_absmag(string find)
		{
			return rowList.FindAll(x => x.absmag == find);
		}
		public Row Find_spect(string find)
		{
			return rowList.Find(x => x.spect == find);
		}
		public List<Row> FindAll_spect(string find)
		{
			return rowList.FindAll(x => x.spect == find);
		}
		public Row Find_ci(string find)
		{
			return rowList.Find(x => x.ci == find);
		}
		public List<Row> FindAll_ci(string find)
		{
			return rowList.FindAll(x => x.ci == find);
		}
		public Row Find_x(string find)
		{
			return rowList.Find(x => x.x == find);
		}
		public List<Row> FindAll_x(string find)
		{
			return rowList.FindAll(x => x.x == find);
		}
		public Row Find_y(string find)
		{
			return rowList.Find(x => x.y == find);
		}
		public List<Row> FindAll_y(string find)
		{
			return rowList.FindAll(x => x.y == find);
		}
		public Row Find_z(string find)
		{
			return rowList.Find(x => x.z == find);
		}
		public List<Row> FindAll_z(string find)
		{
			return rowList.FindAll(x => x.z == find);
		}
		public Row Find_vx(string find)
		{
			return rowList.Find(x => x.vx == find);
		}
		public List<Row> FindAll_vx(string find)
		{
			return rowList.FindAll(x => x.vx == find);
		}
		public Row Find_vy(string find)
		{
			return rowList.Find(x => x.vy == find);
		}
		public List<Row> FindAll_vy(string find)
		{
			return rowList.FindAll(x => x.vy == find);
		}
		public Row Find_vz(string find)
		{
			return rowList.Find(x => x.vz == find);
		}
		public List<Row> FindAll_vz(string find)
		{
			return rowList.FindAll(x => x.vz == find);
		}
		public Row Find_rarad(string find)
		{
			return rowList.Find(x => x.rarad == find);
		}
		public List<Row> FindAll_rarad(string find)
		{
			return rowList.FindAll(x => x.rarad == find);
		}
		public Row Find_decrad(string find)
		{
			return rowList.Find(x => x.decrad == find);
		}
		public List<Row> FindAll_decrad(string find)
		{
			return rowList.FindAll(x => x.decrad == find);
		}
		public Row Find_pmrarad(string find)
		{
			return rowList.Find(x => x.pmrarad == find);
		}
		public List<Row> FindAll_pmrarad(string find)
		{
			return rowList.FindAll(x => x.pmrarad == find);
		}
		public Row Find_pmdecrad(string find)
		{
			return rowList.Find(x => x.pmdecrad == find);
		}
		public List<Row> FindAll_pmdecrad(string find)
		{
			return rowList.FindAll(x => x.pmdecrad == find);
		}
		public Row Find_bayer(string find)
		{
			return rowList.Find(x => x.bayer == find);
		}
		public List<Row> FindAll_bayer(string find)
		{
			return rowList.FindAll(x => x.bayer == find);
		}
		public Row Find_flam(string find)
		{
			return rowList.Find(x => x.flam == find);
		}
		public List<Row> FindAll_flam(string find)
		{
			return rowList.FindAll(x => x.flam == find);
		}
		public Row Find_con(string find)
		{
			return rowList.Find(x => x.con == find);
		}
		public List<Row> FindAll_con(string find)
		{
			return rowList.FindAll(x => x.con == find);
		}
		public Row Find_comp(string find)
		{
			return rowList.Find(x => x.comp == find);
		}
		public List<Row> FindAll_comp(string find)
		{
			return rowList.FindAll(x => x.comp == find);
		}
		public Row Find_comp_primary(string find)
		{
			return rowList.Find(x => x.comp_primary == find);
		}
		public List<Row> FindAll_comp_primary(string find)
		{
			return rowList.FindAll(x => x.comp_primary == find);
		}
		public Row Find_base(string find)
		{
			return rowList.Find(x => x.bs == find);
		}
		public List<Row> FindAll_base(string find)
		{
			return rowList.FindAll(x => x.bs == find);
		}
		public Row Find_lum(string find)
		{
			return rowList.Find(x => x.lum == find);
		}
		public List<Row> FindAll_lum(string find)
		{
			return rowList.FindAll(x => x.lum == find);
		}
		public Row Find_var(string find)
		{
			return rowList.Find(x => x.vr == find);
		}
		public List<Row> FindAll_var(string find)
		{
			return rowList.FindAll(x => x.vr == find);
		}
		public Row Find_var_min(string find)
		{
			return rowList.Find(x => x.var_min == find);
		}
		public List<Row> FindAll_var_min(string find)
		{
			return rowList.FindAll(x => x.var_min == find);
		}
		public Row Find_var_max(string find)
		{
			return rowList.Find(x => x.var_max == find);
		}
		public List<Row> FindAll_var_max(string find)
		{
			return rowList.FindAll(x => x.var_max == find);
		}

	}
}